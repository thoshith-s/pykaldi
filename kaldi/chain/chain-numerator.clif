from "cudamatrix/cu-matrix-clifwrap.h" import *
from "chain/chain-supervision-clifwrap.h" import *


from "chain/chain-numerator.h":
  namespace `kaldi::chain`:
    class NumeratorComputation:
      """Numerator computer used in chain training.

      This does forward-backward of the 'supervision' (numerator) FSTs.

      Args:
        supervision (Supervision): Supervision for this minibatch
        nnet_output (CuMatrix): The output of the neural network for this minibatch

      """
      def __init__(self, supervision: Supervision, nnet_output: CuMatrixBase)

      def `Forward` as forward(self) -> float:
        """Does the forward computation.

        Returns:
          float: Total log-prob multiplied by supervision.weight.
        """

      def `Backward` as backward(self, nnet_output_deriv: CuMatrixBase):
        """Does the backward computation.

        Args:
          nnet_output_deriv (CuMatrix): Output matrix.
        """
