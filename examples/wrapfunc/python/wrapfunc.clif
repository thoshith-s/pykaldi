# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We use a type wrapped elsewhere in this clif file.
# Hence, import the wrapped type from the clif generated C++ header file.
from "wrappod/python/wrappod.h" import *

from "wrapfunc/wrapfunc.h":
  namespace `clif_example::wrapfunc`:
    def ResetState()
    def SetState(a: int)
    def `SetState` as SetStateFromSum(a: int, b: int)
    def `SetState` as SetStateFromMyClass(s: MyClass)

    def `GetState` as GetState() -> int

    # The following two functions wrap the same C++ function, but in two
    # different flavors; One stores the state in the MyClass argument, the other
    # returns the state in a new MyClass object.
    def `GetState` as Store(a: MyClass)
    def `GetState` as StoreInNew() -> (a: MyClass)
